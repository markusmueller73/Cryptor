;  * CRYPTOR;  *;  * macos_special.pbi;  *;--------------------------------------------------------------------------------;- a MacOS workaround for opening files with the finderCompilerIf #PB_Compiler_OS = #PB_OS_MacOS    ;-- import MacOS C function  ImportC ""    PB_Gadget_SetOpenFinderFiles(Callback)  EndImport    ;-- callback function  ProcedureC OpenFinderFilesCallback(*Utf8Files)        ;--- each file is separated by a 'tab'    Protected   param$ = PeekS(*Utf8Files, -1, #PB_UTF8)    Protected.l i, nbOfFiles = CountString(param$, #TAB$)        If Len(param$) > 0            nbOfFiles = CountString(param$, #TAB$)            If nbOfFiles = 0 ; no tab? than only one filename        nbOfFiles = 1      EndIf          EndIf        If nbOfFiles > 0            info("App opened via MacOS Finder, got " + Str(nbOfFiles) + " parameters.")            ALT_PARAMS_SET = #True      PARAMS         = nbOfFiles            For i = 1 To nbOfFiles                AddElement(PARAMETER_LIST())        PARAMETER_LIST() = StringField(param$, i, #TAB$)        info("Parameter #" + Str(i) + " = " + PARAMETER_LIST())              Next          EndIf        PostEvent(#APP_EVENT_MACOS_FINDER_FILELIST)      EndProcedure    ;-- activate callback when opening with MacOS finder  PB_Gadget_SetOpenFinderFiles(@OpenFinderFilesCallback())  info("Set function hook [PB_Gadget_SetOpenFinderFiles] for MacOS.")  CompilerElse  ALT_PARAMS_SET = #False  PARAMS         = CountProgramParameters()CompilerEndIf;--------------------------------------------------------------------------------; IDE Options = PureBasic 5.71 LTS (MacOS X - x64); CursorPosition = 53; FirstLine = 30; Folding = -; EnableXP; EnablePurifier; EnableCompileCount = 0; EnableBuildCount = 0; EnableExeConstant